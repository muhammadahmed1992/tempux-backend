name: Deploy Dev Environment

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: SSH Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: |
          AHMED: ${{secrets.AHMED}}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          OTP_EXPIRY_DURATION: ${{ secrets.OTP_EXPIRY_DURATION }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_FROM: ${{ secrets.MAIL_FROM }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL: ${{ secrets.GOOGLE_CALLBACK_URL }}
          FACEBOOK_APP_ID: ${{ secrets.FACEBOOK_APP_ID }}
          FACEBOOK_APP_SECRET: ${{ secrets.FACEBOOK_APP_SECRET }}
          FACEBOOK_CALLBACK_URL: ${{ secrets.FACEBOOK_CALLBACK_URL }}
          EMAIL_ENCRYPTION_KEY: ${{ secrets.EMAIL_ENCRYPTION_KEY }}
          SALT_ROUND: ${{ secrets.SALT_ROUND }}
          AUTH_PORT: ${{ secrets.AUTH_PORT }}
          USER_SERVICE_URL: ${{ secrets.USER_SERVICE_URL }}
          AUTH_SERVICE_BASE_URL: ${{ secrets.AUTH_SERVICE_BASE_URL }}
          PRODUCT_SERVICE_BASE_URL: ${{ secrets.PRODUCT_SERVICE_BASE_URL }}
          PRODUCT_PORT: ${{ secrets.PRODUCT_PORT }}
          GATEWAY_PORT: ${{ secrets.GATEWAY_PORT }}
          DATABASE_URL_DEV_USERS: ${{ secrets.DATABASE_URL_DEV_USERS }}
          DATABASE_URL_DEV_PRODUCT: ${{ secrets.DATABASE_URL_DEV_PRODUCT }}

          script: |
            PROJECT_DIR="/home/ubuntu/tempux-backend"
            export CI=true
            echo " $AHMED ()"
            echo "ðŸ‘‰ Pull latest code"
            cd "$PROJECT_DIR" || { echo "Error: Could not change to project directory. Exiting."; exit 1; }

            git reset --hard HEAD
            git clean -df
            git fetch origin
            git checkout develop
            git pull origin develop

            echo "ðŸ‘‰ Ensuring .npm-global/bin is in PATH"
            npm config set prefix '~/.npm-global'
            export PATH="$PATH:/home/ubuntu/.npm-global/bin"
            echo 'export PATH="$PATH:/home/ubuntu/.npm-global/bin"' >> ~/.bashrc
            source ~/.bashrc

            echo "ðŸ‘‰ Installing pnpm globally..."
            npm install -g pnpm || { echo "Failed to install pnpm globally. Exiting."; exit 1; }

            pnpm setup
            export PNPM_HOME="$HOME/.pnpm-global"
            mkdir -p "$PNPM_HOME"
            echo "export PNPM_HOME=\"$PNPM_HOME\"" >> ~/.bashrc
            echo "export PATH=\"$PNPM_HOME:$PATH\"" >> ~/.bashrc
            export PATH="$PNPM_HOME:$PATH"
            source ~/.bashrc

            echo "ðŸ‘‰ Install nestjs cli + tsx globally"
            pnpm add -g tsx @nestjs/cli || { echo "Global pnpm install failed. Exiting."; exit 1; }

            echo "ðŸ‘‰ Stopping and deleting existing PM2 processes..."
            pm2 delete all || true

            echo "ðŸ‘‰ Install dependencies"
            pnpm install

            cd "$PROJECT_DIR/api-gateway" && pnpm install && pnpm run build || { echo "Error: api-gateway failed. Exiting."; exit 1; }
            cd "$PROJECT_DIR/auth-service" && pnpm install || { echo "Error: auth-service failed. Exiting."; exit 1; }
            cd "$PROJECT_DIR/product-service" && pnpm install || { echo "Error: product-service failed. Exiting."; exit 1; }
            cd "$PROJECT_DIR"

            echo "ðŸ‘‰ DEBUG: Listing secrets injected to remote..."
            echo "JWT_SECRET=$JWT_SECRET"
            echo "OTP_EXPIRY_DURATION=$OTP_EXPIRY_DURATION"
            echo "MAIL_HOST=$MAIL_HOST"
            echo "MAIL_PORT=$MAIL_PORT"
            echo "MAIL_USERNAME=$MAIL_USERNAME"
            echo "MAIL_PASSWORD=$MAIL_PASSWORD"
            echo "MAIL_FROM=$MAIL_FROM"
            echo "FRONTEND_URL=$FRONTEND_URL"
            echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID"
            echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET"
            echo "GOOGLE_CALLBACK_URL=$GOOGLE_CALLBACK_URL"
            echo "FACEBOOK_APP_ID=$FACEBOOK_APP_ID"
            echo "FACEBOOK_APP_SECRET=$FACEBOOK_APP_SECRET"
            echo "FACEBOOK_CALLBACK_URL=$FACEBOOK_CALLBACK_URL"
            echo "EMAIL_ENCRYPTION_KEY=$EMAIL_ENCRYPTION_KEY"
            echo "SALT_ROUND=$SALT_ROUND"
            echo "AUTH_PORT=$AUTH_PORT"
            echo "USER_SERVICE_URL=$USER_SERVICE_URL"
            echo "AUTH_SERVICE_BASE_URL=$AUTH_SERVICE_BASE_URL"
            echo "PRODUCT_SERVICE_BASE_URL=$PRODUCT_SERVICE_BASE_URL"
            echo "PRODUCT_PORT=$PRODUCT_PORT"
            echo "GATEWAY_PORT=$GATEWAY_PORT"
            echo "DATABASE_URL_DEV_USERS=$DATABASE_URL_DEV_USERS"
            echo "DATABASE_URL_DEV_PRODUCT=$DATABASE_URL_DEV_PRODUCT"

            ECOSYSTEM_FILE="ecosystem.config.js"
            BACKUP_DIR="/home/ubuntu/pm2_config_backups"
            mkdir -p "$BACKUP_DIR"
            ls -tp "$BACKUP_DIR" | grep -v '/$' | tail -n +6 | xargs -I {} rm -- "$BACKUP_DIR/{}" || true

            sed -i.bak "s#INJECT_JWT_SECRET#$JWT_SECRET#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_OTP_EXPIRY_DURATION#$OTP_EXPIRY_DURATION#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_MAIL_HOST#$MAIL_HOST#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_MAIL_PORT#$MAIL_PORT#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_MAIL_USERNAME#$MAIL_USERNAME#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_MAIL_PASSWORD#$MAIL_PASSWORD#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_MAIL_FROM#$MAIL_FROM#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_FRONTEND_URL#$FRONTEND_URL#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_GOOGLE_CLIENT_ID#$GOOGLE_CLIENT_ID#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_GOOGLE_CLIENT_SECRET#$GOOGLE_CLIENT_SECRET#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_GOOGLE_CALLBACK_URL#$GOOGLE_CALLBACK_URL#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_FACEBOOK_APP_ID#$FACEBOOK_APP_ID#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_FACEBOOK_APP_SECRET#$FACEBOOK_APP_SECRET#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_FACEBOOK_CALLBACK_URL#$FACEBOOK_CALLBACK_URL#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_EMAIL_ENCRYPTION_KEY#$EMAIL_ENCRYPTION_KEY#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_SALT_ROUND#$SALT_ROUND#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_AUTH_PORT#$AUTH_PORT#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_USER_SERVICE_URL#$USER_SERVICE_URL#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_AUTH_SERVICE_BASE_URL#$AUTH_SERVICE_BASE_URL#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_PRODUCT_SERVICE_BASE_URL#$PRODUCT_SERVICE_BASE_URL#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_PRODUCT_PORT#$PRODUCT_PORT#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_GATEWAY_PORT#$GATEWAY_PORT#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_DATABASE_URL_DEV_USERS#$DATABASE_URL_DEV_USERS#g" "$ECOSYSTEM_FILE"
            sed -i.bak "s#INJECT_DATABASE_URL_DEV_PRODUCT#$DATABASE_URL_DEV_PRODUCT#g" "$ECOSYSTEM_FILE"

            BACKUP_FILENAME="${ECOSYSTEM_FILE}.bak"
            TIMESTAMP=$(date +%Y%m%d%H%M%S)
            TARGET_BACKUP_PATH="${BACKUP_DIR}/${ECOSYSTEM_FILE}.${TIMESTAMP}.bak"

            if [ -f "$BACKUP_FILENAME" ]; then
              echo "ðŸ‘‰ Moving $BACKUP_FILENAME to $TARGET_BACKUP_PATH..."
              mv "$BACKUP_FILENAME" "$TARGET_BACKUP_PATH" || { echo "Error: Failed to move backup file. Exiting."; exit 1; }
              echo "Backup moved successfully."
            else
              echo "No .bak file found to move. This might be normal if sed didn't make changes."
            fi

            echo "ðŸ‘‰ Displaying ecosystem.config.js after secret injection:"
            cat "$ECOSYSTEM_FILE"

            echo "ðŸ‘‰ Prisma migrate + seed for auth-service"
            cd "$PROJECT_DIR/auth-service"
            DATABASE_URL_DEV_USERS="$DATABASE_URL_DEV_USERS" pnpm exec prisma migrate deploy --schema prisma/schema.prisma || exit 1
            DATABASE_URL_DEV_USERS="$DATABASE_URL_DEV_USERS" pnpm exec prisma db seed --schema prisma/schema.prisma || exit 1
            pnpm exec prisma generate --schema prisma/schema.prisma || exit 1
            pnpm run build
            cd "$PROJECT_DIR"

            echo "ðŸ‘‰ Prisma migrate + seed for product-service"
            cd "$PROJECT_DIR/product-service"
            DATABASE_URL_DEV_PRODUCT="$DATABASE_URL_DEV_PRODUCT" pnpm exec prisma migrate deploy --schema prisma/schema.prisma || exit 1
            DATABASE_URL_DEV_PRODUCT="$DATABASE_URL_DEV_PRODUCT" pnpm exec prisma db seed --schema prisma/schema.prisma || exit 1
            pnpm exec prisma generate --schema prisma/schema.prisma || exit 1
            pnpm run build
            cd "$PROJECT_DIR"

            echo "ðŸ‘‰ Start/Reload PM2 processes"
            pm2 start "$ECOSYSTEM_FILE" --update-env --env production || exit 1
